const window = require('xwindow')

/**
 * type : [constructor, bubbles, cancelable]
 */
const EventType = {
  afterprint : [window.Event],
  auxclick : [window.MouseEvent, true, true],
  beforematch : [window.Event],
  beforeprint : [window.Event],
  beforeunload : [window.Event],
  blur : [window.FocusEvent],
  cancel : [window.Event, false, true],
  canplay : [window.Event],
  canplaythrough : [window.Event],
  change : [window.Event, true],
  click : [window.MouseEvent, true, true],
  close : [window.Event],
  contextlost : [window.Event],
  contextmenu : [window.MouseEvent, true, true],
  contextrestored : [window.Event],
  copy : [window.ClipboardEvent, true, true],
  cuechange : [window.Event],
  cut : [window.ClipboardEvent, true, true],
  dblclick : [window.MouseEvent, true, true],
  drag : [window.DragEvent, true, true],
  dragend : [window.DragEvent, true],
  dragenter : [window.DragEvent, true, true],
  dragleave : [window.DragEvent, true],
  dragover : [window.DragEvent, true, true],
  dragstart : [window.DragEvent, true, true],
  drop : [window.DragEvent, true, true],
  durationchange : [window.Event],
  emptied : [window.Event],
  ended : [window.Event],
  error : [window.Event],
  focus : [window.FocusEvent],
  focusin : [window.FocusEvent, true],
  focusout : [window.FocusEvent, true],
  formdata : [window.FormDataEvent],
  hashchange : [window.HashChangeEvent],
  input : [window.InputEvent, true],
  invalid : [window.Event, false, true],
  keydown : [window.KeyboardEvent, true, true],
  keypress : [window.KeyboardEvent, true, true],
  keyup : [window.KeyboardEvent, true, true],
  languagechange : [window.Event],
  load : [window.Event],
  loadeddata : [window.Event],
  loadedmetadata : [window.Event],
  loadstart : [window.Event],
  message : [window.MessageEvent],
  messageerror : [window.MessageEvent],
  mousedown : [window.MouseEvent, true, true],
  mouseenter : [window.MouseEvent],
  mouseleave : [window.MouseEvent],
  mousemove : [window.MouseEvent, true, true],
  mouseout : [window.MouseEvent, true, true],
  mouseover : [window.MouseEvent, true, true],
  mouseup : [window.MouseEvent, true, true],
  offline : [window.Event],
  online : [window.Event],
  pagehide : [window.PageTransitionEvent],
  pageshow : [window.PageTransitionEvent],
  paste : [window.ClipboardEvent, true, true],
  pause : [window.Event],
  play : [window.Event],
  playing : [window.Event],
  popstate : [window.PopStateEvent],
  progress : [window.ProgressEvent],
  ratechange : [window.Event],
  reset : [window.Event, true, true],
  resize : [window.UIEvent],
  rejectionhandled : [window.PromiseRejectionEvent],
  scroll : [window.Event, true],
  securitypolicyviolation : [window.SecurityPolicyViolationEvent, true],
  seeked : [window.Event],
  seeking : [window.Event],
  select : [window.UIEvent, true],
  slotchange : [window.Event, true],
  stalled : [window.Event],
  storage : [window.StorageEvent],
  submit : [window.SubmitEvent, true, true],
  suspend : [window.Event],
  timeupdate : [window.Event],
  toggle : [window.Event],
  touchcancel : [window.TouchEvent, true],
  touchend : [window.TouchEvent, true, true],
  touchmove : [window.TouchEvent, true, true],
  touchstart : [window.TouchEvent, true, true],
  transitioncancel : [window.TransitionEvent, true],
  transitionend : [window.TransitionEvent, true, true],
  transitionrun : [window.TransitionEvent, true],
  transitionstart : [window.TransitionEvent, true],
  unhandledrejection : [window.PromiseRejectionEvent],
  unload : [window.Event],
  volumechange : [window.Event],
  waiting : [window.Event],
  wheel : [window.WheelEvent, true, true],
}

module.exports = EventType
